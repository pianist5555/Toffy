{"ast":null,"code":"import React from'react';import{connect}from'react-redux';// 리덕스와 직접 연동하는 컨테이너 컴포트를 리덕스와 연동하기 위한 connect 임포트\nimport GameList from'../components/GameList.js';import{getGameList}from'../modules/gameList.js';import{setCurrentPage,setPostsPerPage,setTotalPosts}from'../modules/pagination.js';var useEffect=React.useEffect;var GameListContainer=function GameListContainer(_ref){var getGameList=_ref.getGameList,loadingGameList=_ref.loadingGameList,gameList=_ref.gameList,select=_ref.select,currentPage=_ref.currentPage,totalPosts=_ref.totalPosts,postsPerPage=_ref.postsPerPage,setTotalPosts=_ref.setTotalPosts,setCurrentPage=_ref.setCurrentPage,setPostsPerPage=_ref.setPostsPerPage,selectedLang=_ref.selectedLang,selectedGame=_ref.selectedGame;useEffect(function(){getGameList(1);// createRequestThunk에서 api에서 보내주는 객체의 성공 실패여부를 판단하고 dispatch로 리듀서 함수를 실행시켜 store 상태를 변화시킴\n},[getGameList]);// getGameList등 스토어 상태가 변화되면 useEffect 실행(렌더링)\nreturn/*#__PURE__*/React.createElement(GameList,{gameList:gameList,loadingGameList:loadingGameList,select:select,currentPage:currentPage,totalPosts:totalPosts,postsPerPage:postsPerPage,setTotalPosts:setTotalPosts,setCurrentPage:setCurrentPage,setPostsPerPage:setPostsPerPage,selectedLang:selectedLang,selectedGame:selectedGame});};export default connect(function(_ref2){var gameList=_ref2.gameList,loading=_ref2.loading,tag=_ref2.tag,pagination=_ref2.pagination,footer=_ref2.footer,navbar=_ref2.navbar;return{// <GameList>의 props\ngameList:gameList.gameList,loadingGameList:loading['gameList/GET_GAMELIST'],select:tag.selectedTags,currentPage:pagination.currentPage,totalPosts:pagination.totalPosts,postsPerPage:pagination.postsPerPage,selectedLang:footer.selectedLang,selectedGame:navbar.selectedGame};},{// 리듀서 함수 (module/gameList.js)\ngetGameList:getGameList,setTotalPosts:setTotalPosts,setCurrentPage:setCurrentPage,setPostsPerPage:setPostsPerPage})(GameListContainer);","map":{"version":3,"sources":["C:/Users/piani/Documents/GitHub/Toffyy/Toffyy/frontend/src/containers/GameListContainer.js"],"names":["React","connect","GameList","getGameList","setCurrentPage","setPostsPerPage","setTotalPosts","useEffect","GameListContainer","loadingGameList","gameList","select","currentPage","totalPosts","postsPerPage","selectedLang","selectedGame","loading","tag","pagination","footer","navbar","selectedTags"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAAuC;AACvC,MAAOC,CAAAA,QAAP,KAAqB,2BAArB,CACA,OAASC,WAAT,KAA4B,wBAA5B,CACA,OAASC,cAAT,CAAyBC,eAAzB,CAAyCC,aAAzC,KAA8D,0BAA9D,C,GAEQC,CAAAA,S,CAAcP,K,CAAdO,S,CACR,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,MAapB,IAZFL,CAAAA,WAYE,MAZFA,WAYE,CAXFM,eAWE,MAXFA,eAWE,CAVFC,QAUE,MAVFA,QAUE,CATFC,MASE,MATFA,MASE,CARFC,WAQE,MARFA,WAQE,CAPFC,UAOE,MAPFA,UAOE,CANFC,YAME,MANFA,YAME,CALFR,aAKE,MALFA,aAKE,CAJFF,cAIE,MAJFA,cAIE,CAHFC,eAGE,MAHFA,eAGE,CAFFU,YAEE,MAFFA,YAEE,CADFC,YACE,MADFA,YACE,CACFT,SAAS,CAAC,UAAM,CACZJ,WAAW,CAAC,CAAD,CAAX,CAAgB;AACnB,CAFQ,CAEN,CAACA,WAAD,CAFM,CAAT,CAEmB;AACnB,mBACI,oBAAC,QAAD,EACI,QAAQ,CAAEO,QADd,CAEI,eAAe,CAAED,eAFrB,CAGI,MAAM,CAAEE,MAHZ,CAII,WAAW,CAAEC,WAJjB,CAKI,UAAU,CAAEC,UALhB,CAMI,YAAY,CAAEC,YANlB,CAOI,aAAa,CAAER,aAPnB,CAQI,cAAc,CAAEF,cARpB,CASI,eAAe,CAAEC,eATrB,CAUI,YAAY,CAAEU,YAVlB,CAWI,YAAY,CAAEC,YAXlB,EADJ,CAeH,CAhCD,CAkCA,cAAef,CAAAA,OAAO,CAClB,mBAAGS,CAAAA,QAAH,OAAGA,QAAH,CAAaO,OAAb,OAAaA,OAAb,CAAsBC,GAAtB,OAAsBA,GAAtB,CAA2BC,UAA3B,OAA2BA,UAA3B,CAAuCC,MAAvC,OAAuCA,MAAvC,CAA+CC,MAA/C,OAA+CA,MAA/C,OAA6D,CACzD;AACAX,QAAQ,CAAEA,QAAQ,CAACA,QAFsC,CAGzDD,eAAe,CAAEQ,OAAO,CAAC,uBAAD,CAHiC,CAIzDN,MAAM,CAAEO,GAAG,CAACI,YAJ6C,CAKzDV,WAAW,CAACO,UAAU,CAACP,WALkC,CAMzDC,UAAU,CAAEM,UAAU,CAACN,UANkC,CAOzDC,YAAY,CAAEK,UAAU,CAACL,YAPgC,CAQzDC,YAAY,CAAEK,MAAM,CAACL,YARoC,CASzDC,YAAY,CAAGK,MAAM,CAACL,YATmC,CAA7D,EADkB,CAYlB,CACI;AACAb,WAAW,CAAXA,WAFJ,CAGIG,aAAa,CAAbA,aAHJ,CAIIF,cAAc,CAAdA,cAJJ,CAKIC,eAAe,CAAfA,eALJ,CAZkB,CAAP,CAmBbG,iBAnBa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'; // 리덕스와 직접 연동하는 컨테이너 컴포트를 리덕스와 연동하기 위한 connect 임포트\r\nimport GameList from '../components/GameList.js'\r\nimport { getGameList } from '../modules/gameList.js';\r\nimport { setCurrentPage, setPostsPerPage,setTotalPosts } from '../modules/pagination.js';\r\n\r\nconst { useEffect } = React;\r\nconst GameListContainer = ({ \r\n    getGameList,\r\n    loadingGameList,\r\n    gameList,\r\n    select,\r\n    currentPage,\r\n    totalPosts,\r\n    postsPerPage,\r\n    setTotalPosts,\r\n    setCurrentPage,\r\n    setPostsPerPage,\r\n    selectedLang,\r\n    selectedGame\r\n}) => {\r\n    useEffect(() => {\r\n        getGameList(1); // createRequestThunk에서 api에서 보내주는 객체의 성공 실패여부를 판단하고 dispatch로 리듀서 함수를 실행시켜 store 상태를 변화시킴\r\n    }, [getGameList]); // getGameList등 스토어 상태가 변화되면 useEffect 실행(렌더링)\r\n    return (\r\n        <GameList\r\n            gameList={gameList}\r\n            loadingGameList={loadingGameList}\r\n            select={select}\r\n            currentPage={currentPage}\r\n            totalPosts={totalPosts}\r\n            postsPerPage={postsPerPage}\r\n            setTotalPosts={setTotalPosts}\r\n            setCurrentPage={setCurrentPage}\r\n            setPostsPerPage={setPostsPerPage}\r\n            selectedLang={selectedLang}\r\n            selectedGame={selectedGame}\r\n        />\r\n    );\r\n};\r\n\r\nexport default connect(\r\n    ({ gameList, loading, tag, pagination, footer, navbar }) => ({\r\n        // <GameList>의 props\r\n        gameList: gameList.gameList,\r\n        loadingGameList: loading['gameList/GET_GAMELIST'],\r\n        select: tag.selectedTags,\r\n        currentPage:pagination.currentPage,\r\n        totalPosts: pagination.totalPosts,\r\n        postsPerPage: pagination.postsPerPage,\r\n        selectedLang: footer.selectedLang,\r\n        selectedGame : navbar.selectedGame\r\n    }),\r\n    {\r\n        // 리듀서 함수 (module/gameList.js)\r\n        getGameList,\r\n        setTotalPosts,\r\n        setCurrentPage,\r\n        setPostsPerPage\r\n    },\r\n)(GameListContainer)"]},"metadata":{},"sourceType":"module"}