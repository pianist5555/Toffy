{"ast":null,"code":"import { createAction, handleActions } from \"redux-actions\";\nconst SELECTTAGS = \"main/SELECTTAGS\";\nconst UNSELECTTAGS = \"main/UNSELECTTAGS\";\nexport const selectTags = createAction(SELECTTAGS);\nexport const unselectTags = createAction(UNSELECTTAGS);\nconst initialState = {\n  selectedTags: [],\n  selectedColors: []\n};\n\nconst removeTag = (arr, id) => {\n  // return a new list with all values, except the matched id\n  //state.selectedTags.filter(state => state.selectedTags.id !== action.payload)\n  return arr.filter(arr => arr !== id);\n};\n\nconst tag = handleActions({\n  [SELECTTAGS]: (state, action) => ({\n    selectedTags: state.selectedTags.concat(action.payload),\n    selectedColors: state.selectedColors.concat(action.payload)\n  }),\n  [UNSELECTTAGS]: (state, action) => ({\n    selectedTags: removeTag(state.selectedTags, action.payload),\n    selectedColors: removeTag(state.selectedTags, action.payload)\n  })\n}, initialState);\nexport default tag;","map":{"version":3,"sources":["C:/Users/piani/Documents/GitHub/Toffy_frontend_R/Toffy/frontend/src/modules/tag.js"],"names":["createAction","handleActions","SELECTTAGS","UNSELECTTAGS","selectTags","unselectTags","initialState","selectedTags","selectedColors","removeTag","arr","id","filter","tag","state","action","concat","payload"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AAEA,MAAMC,UAAU,GAAG,iBAAnB;AACA,MAAMC,YAAY,GAAG,mBAArB;AAEA,OAAO,MAAMC,UAAU,GAAGJ,YAAY,CAACE,UAAD,CAA/B;AACP,OAAO,MAAMG,YAAY,GAAGL,YAAY,CAACG,YAAD,CAAjC;AAEP,MAAMG,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAC,EADI;AAEjBC,EAAAA,cAAc,EAAC;AAFE,CAArB;;AAKA,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,EAAN,KAAa;AAC7B;AACA;AACA,SAAOD,GAAG,CAACE,MAAJ,CAAWF,GAAG,IAAIA,GAAG,KAAKC,EAA1B,CAAP;AACD,CAJD;;AAMA,MAAME,GAAG,GAAGZ,aAAa,CACvB;AACE,GAACC,UAAD,GAAc,CAACY,KAAD,EAAQC,MAAR,MAAoB;AAChCR,IAAAA,YAAY,EAAEO,KAAK,CAACP,YAAN,CAAmBS,MAAnB,CAA0BD,MAAM,CAACE,OAAjC,CADkB;AAEhCT,IAAAA,cAAc,EAAEM,KAAK,CAACN,cAAN,CAAqBQ,MAArB,CAA4BD,MAAM,CAACE,OAAnC;AAFgB,GAApB,CADhB;AAKE,GAACd,YAAD,GAAgB,CAACW,KAAD,EAAQC,MAAR,MAAoB;AAClCR,IAAAA,YAAY,EAAEE,SAAS,CAACK,KAAK,CAACP,YAAP,EAAqBQ,MAAM,CAACE,OAA5B,CADW;AAElCT,IAAAA,cAAc,EAAEC,SAAS,CAACK,KAAK,CAACP,YAAP,EAAqBQ,MAAM,CAACE,OAA5B;AAFS,GAApB;AALlB,CADuB,EAWvBX,YAXuB,CAAzB;AAcA,eAAeO,GAAf","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\r\n\r\nconst SELECTTAGS = \"main/SELECTTAGS\";\r\nconst UNSELECTTAGS = \"main/UNSELECTTAGS\";\r\n\r\nexport const selectTags = createAction(SELECTTAGS);\r\nexport const unselectTags = createAction(UNSELECTTAGS);\r\n\r\nconst initialState = {\r\n    selectedTags:[],\r\n    selectedColors:[],\r\n};\r\n\r\nconst removeTag = (arr, id) => {\r\n  // return a new list with all values, except the matched id\r\n  //state.selectedTags.filter(state => state.selectedTags.id !== action.payload)\r\n  return arr.filter(arr => arr !== id);\r\n}\r\n\r\nconst tag = handleActions(\r\n  {\r\n    [SELECTTAGS]: (state, action) => ({\r\n      selectedTags: state.selectedTags.concat(action.payload),\r\n      selectedColors: state.selectedColors.concat(action.payload)\r\n    }),\r\n    [UNSELECTTAGS]: (state, action) => ({\r\n      selectedTags: removeTag(state.selectedTags, action.payload),\r\n      selectedColors: removeTag(state.selectedTags, action.payload)\r\n    }),\r\n  },                                                                     \r\n  initialState,\r\n);\r\n\r\nexport default tag;\r\n"]},"metadata":{},"sourceType":"module"}