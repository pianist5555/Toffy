{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piani\\\\Documents\\\\GitHub\\\\Toffyy\\\\Toffyy\\\\frontend\\\\src\\\\pages\\\\Test.js\";\nimport React, { Component } from \"react\";\nimport TextItem from \"../TextItem\";\nimport axios from \"axios\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nclass Test extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: \"\",\n      textList: []\n    };\n\n    this._handleChange = event => {\n      this.setState({\n        value: event.target.value\n      });\n    };\n\n    this._handleSubmit = () => {\n      const {\n        value\n      } = this.state;\n      axios.post(\"/api/wisesaying/\", {\n        text: value\n      }).then(res => this._renderText());\n    };\n\n    this._renderText = () => {\n      axios // Restframework에서 json으로 보여주는 페이지 url을 get 방식으로 접근\n      .get(\"/api/wisesaying/\").then(res => this.setState({\n        textList: res.data\n      })) // res에 데이터들이 담겨짐, state의 textList에 res의 데이터를 저장\n      .catch(err => console.log(err));\n    };\n\n    this._deleteText = id => {\n      axios.delete(`/api/wisesaying/${id}`).then(res => this._renderText());\n    };\n  }\n\n  // 1.렌더링 하기전 _renderText() 함수를 호출\n  componentDidMount() {\n    this._renderText();\n  }\n\n  render() {\n    const {\n      textList\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, \"OneLine App\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, \"Text:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: this._handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this._handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, \"submit\")), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"Long Text\"), textList.map((text, index) => {\n      return /*#__PURE__*/React.createElement(TextItem, {\n        text: text.text,\n        key: index,\n        id: text.id,\n        handleClick: this._deleteText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      });\n    }));\n  }\n\n}\n\nexport default Test;","map":{"version":3,"sources":["C:/Users/piani/Documents/GitHub/Toffyy/Toffyy/frontend/src/pages/Test.js"],"names":["React","Component","TextItem","axios","defaults","xsrfCookieName","xsrfHeaderName","Test","state","value","textList","_handleChange","event","setState","target","_handleSubmit","post","text","then","res","_renderText","get","data","catch","err","console","log","_deleteText","id","delete","componentDidMount","render","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,QAAN,CAAeC,cAAf,GAAgC,WAAhC;AACAF,KAAK,CAACC,QAAN,CAAeE,cAAf,GAAgC,aAAhC;;AAEA,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BO,KAD2B,GACnB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KADmB;;AAAA,SA0C3BC,aA1C2B,GA0CXC,KAAK,IAAI;AACvB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAEG,KAAK,CAACE,MAAN,CAAaL;AAAtB,OAAd;AACD,KA5C0B;;AAAA,SA6C3BM,aA7C2B,GA6CX,MAAM;AACpB,YAAM;AAAEN,QAAAA;AAAF,UAAY,KAAKD,KAAvB;AACAL,MAAAA,KAAK,CACFa,IADH,CACQ,kBADR,EAC4B;AAAEC,QAAAA,IAAI,EAAER;AAAR,OAD5B,EAEGS,IAFH,CAEQC,GAAG,IAAI,KAAKC,WAAL,EAFf;AAGD,KAlD0B;;AAAA,SAoD3BA,WApD2B,GAoDb,MAAM;AAClBjB,MAAAA,KAAK,CACL;AADK,OAEFkB,GAFH,CAEO,kBAFP,EAGGH,IAHH,CAGQC,GAAG,IAAI,KAAKN,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAAES,GAAG,CAACG;AAAhB,OAAd,CAHf,EAGsD;AAHtD,OAIGC,KAJH,CAISC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJhB;AAKD,KA1D0B;;AAAA,SA2D3BG,WA3D2B,GA2DbC,EAAE,IAAI;AAClBzB,MAAAA,KAAK,CAAC0B,MAAN,CAAc,mBAAkBD,EAAG,EAAnC,EAAsCV,IAAtC,CAA2CC,GAAG,IAAI,KAAKC,WAAL,EAAlD;AACD,KA7D0B;AAAA;;AAM3B;AACAU,EAAAA,iBAAiB,GAAG;AAClB,SAAKV,WAAL;AACD;;AACDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAErB,MAAAA;AAAF,QAAe,KAAKF,KAA1B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAE,KAAKA,KAAL,CAAWC,KAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKE,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eASE;AAAQ,MAAA,OAAO,EAAE,KAAKI,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,CAFF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAbF,EAgBGL,QAAQ,CAACsB,GAAT,CAAa,CAACf,IAAD,EAAOgB,KAAP,KAAiB;AAC7B,0BACE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAEhB,IAAI,CAACA,IADb;AAEE,QAAA,GAAG,EAAEgB,KAFP;AAGE,QAAA,EAAE,EAAEhB,IAAI,CAACW,EAHX;AAIE,QAAA,WAAW,EAAE,KAAKD,WAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD,KATA,CAhBH,CADF;AA6BD;;AAzC0B;;AAgE7B,eAAepB,IAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport TextItem from \"../TextItem\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    value: \"\",\r\n    textList: []\r\n  };\r\n\r\n  // 1.렌더링 하기전 _renderText() 함수를 호출\r\n  componentDidMount() {\r\n    this._renderText();\r\n  }\r\n  render() {\r\n    const { textList } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>OneLine App</h1>\r\n        <div>\r\n          <label>\r\n            Text:\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.value}\r\n              onChange={this._handleChange}\r\n            />\r\n          </label>\r\n          <button onClick={this._handleSubmit}>submit</button>\r\n        </div>\r\n        <h2>Long Text</h2>\r\n        {/* 3. state에 담긴 textList에서 Data(파라미터가 text로 표현되어있음)를 있는대로 \r\n            다꺼내서 화면에 return (index는 자동으로 지정됨) */}\r\n        {textList.map((text, index) => {\r\n          return (\r\n            <TextItem\r\n              text={text.text}\r\n              key={index}\r\n              id={text.id}\r\n              handleClick={this._deleteText}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n  _handleChange = event => {\r\n    this.setState({ value: event.target.value });\r\n  };\r\n  _handleSubmit = () => {\r\n    const { value } = this.state;\r\n    axios\r\n      .post(\"/api/wisesaying/\", { text: value })\r\n      .then(res => this._renderText());\r\n  };\r\n  // 2. 호출된 _renderText 함수는 장고 Model에 있는 Data를 Json으로 보여주는 페이지에서 Data를 가져와 SetState해줌\r\n  _renderText = () => {\r\n    axios\r\n    // Restframework에서 json으로 보여주는 페이지 url을 get 방식으로 접근\r\n      .get(\"/api/wisesaying/\")\r\n      .then(res => this.setState({ textList: res.data })) // res에 데이터들이 담겨짐, state의 textList에 res의 데이터를 저장\r\n      .catch(err => console.log(err));\r\n  };\r\n  _deleteText = id => {\r\n    axios.delete(`/api/wisesaying/${id}`).then(res => this._renderText());\r\n  };\r\n}\r\n\r\nexport default Test;\r\n"]},"metadata":{},"sourceType":"module"}