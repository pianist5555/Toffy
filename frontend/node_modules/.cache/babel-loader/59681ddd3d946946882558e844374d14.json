{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piani\\\\Documents\\\\GitHub\\\\Toffyy\\\\Toffyy\\\\frontend\\\\src\\\\containers\\\\GameListContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; // 리덕스와 직접 연동하는 컨테이너 컴포트를 리덕스와 연동하기 위한 connect 임포트\n\nimport GameList from '../components/GameList.js';\nimport { getGameList } from '../modules/gameList.js';\nconst {\n  useEffect\n} = React;\n\nconst GameListContainer = ({\n  getGameList,\n  loadingGameList,\n  gameList,\n  select\n}) => {\n  useEffect(() => {\n    getGameList(1); // createRequestThunk에서 api에서 보내주는 객체의 성공 실패여부를 판단하고 dispatch로 리듀서 함수를 실행시켜 store 상태를 변화시킴\n  }, [getGameList]); // getGameList등 스토어 상태가 변화되면 useEffect 실행(렌더링)\n\n  return /*#__PURE__*/React.createElement(GameList, {\n    gameList: gameList,\n    loadingGameList: loadingGameList,\n    select: select,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default connect(({\n  gameList,\n  loading,\n  tag\n}) => ({\n  // <GameList>의 props\n  gameList: gameList.gameList,\n  loadingGameList: loading['gameList/GET_GAMELIST'],\n  select: tag.selectedTags\n}), {\n  // 리듀서 함수 (module/gameList.js)\n  getGameList\n})(GameListContainer);","map":{"version":3,"sources":["C:/Users/piani/Documents/GitHub/Toffyy/Toffyy/frontend/src/containers/GameListContainer.js"],"names":["React","connect","GameList","getGameList","useEffect","GameListContainer","loadingGameList","gameList","select","loading","tag","selectedTags"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAAuC;;AACvC,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAgBJ,KAAtB;;AACA,MAAMK,iBAAiB,GAAG,CAAC;AACvBF,EAAAA,WADuB;AAEvBG,EAAAA,eAFuB;AAGvBC,EAAAA,QAHuB;AAIvBC,EAAAA;AAJuB,CAAD,KAKpB;AACFJ,EAAAA,SAAS,CAAC,MAAM;AACZD,IAAAA,WAAW,CAAC,CAAD,CAAX,CADY,CACI;AACnB,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT,CADE,CAGiB;;AACnB,sBACI,oBAAC,QAAD;AACI,IAAA,QAAQ,EAAEI,QADd;AAEI,IAAA,eAAe,EAAED,eAFrB;AAGI,IAAA,MAAM,EAAEE,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAOH,CAhBD;;AAkBA,eAAeP,OAAO,CAClB,CAAC;AAAEM,EAAAA,QAAF;AAAYE,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAD,MAAiC;AAC7B;AACAH,EAAAA,QAAQ,EAAEA,QAAQ,CAACA,QAFU;AAG7BD,EAAAA,eAAe,EAAEG,OAAO,CAAC,uBAAD,CAHK;AAI7BD,EAAAA,MAAM,EAAEE,GAAG,CAACC;AAJiB,CAAjC,CADkB,EAOlB;AACI;AACAR,EAAAA;AAFJ,CAPkB,CAAP,CAWbE,iBAXa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'; // 리덕스와 직접 연동하는 컨테이너 컴포트를 리덕스와 연동하기 위한 connect 임포트\r\nimport GameList from '../components/GameList.js'\r\nimport { getGameList } from '../modules/gameList.js';\r\n\r\nconst { useEffect } = React;\r\nconst GameListContainer = ({ \r\n    getGameList,\r\n    loadingGameList,\r\n    gameList,\r\n    select,\r\n}) => {\r\n    useEffect(() => {\r\n        getGameList(1); // createRequestThunk에서 api에서 보내주는 객체의 성공 실패여부를 판단하고 dispatch로 리듀서 함수를 실행시켜 store 상태를 변화시킴\r\n    }, [getGameList]); // getGameList등 스토어 상태가 변화되면 useEffect 실행(렌더링)\r\n    return (\r\n        <GameList\r\n            gameList={gameList}\r\n            loadingGameList={loadingGameList}\r\n            select={select}\r\n        />\r\n    );\r\n};\r\n\r\nexport default connect(\r\n    ({ gameList, loading, tag }) => ({\r\n        // <GameList>의 props\r\n        gameList: gameList.gameList,\r\n        loadingGameList: loading['gameList/GET_GAMELIST'],\r\n        select: tag.selectedTags\r\n    }),\r\n    {\r\n        // 리듀서 함수 (module/gameList.js)\r\n        getGameList\r\n    },\r\n)(GameListContainer)"]},"metadata":{},"sourceType":"module"}