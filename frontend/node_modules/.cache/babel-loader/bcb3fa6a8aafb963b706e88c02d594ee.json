{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piani\\\\Documents\\\\GitHub\\\\Toffy\\\\frontend\\\\src\\\\containers\\\\GameListContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; // 리덕스와 직접 연동하는 컨테이너 컴포트를 리덕스와 연동하기 위한 connect 임포트\n\nimport GameList from '../components/GameList.js';\nimport { getGameList } from '../modules/gameList.js';\nimport { setCurrentPage, setPostsPerPage, setTotalPosts } from '../modules/pagination.js';\nconst {\n  useEffect\n} = React;\n\nconst GameListContainer = ({\n  getGameList,\n  loadingGameList,\n  gameList,\n  select,\n  currentPage,\n  totalPosts,\n  postsPerPage,\n  setTotalPosts,\n  setCurrentPage,\n  setPostsPerPage,\n  selectedLang,\n  selectedGame\n}) => {\n  useEffect(() => {\n    getGameList(1); // createRequestThunk에서 api에서 보내주는 객체의 성공 실패여부를 판단하고 dispatch로 리듀서 함수를 실행시켜 store 상태를 변화시킴\n  }, [getGameList]); // getGameList등 스토어 상태가 변화되면 useEffect 실행(렌더링)\n\n  return /*#__PURE__*/React.createElement(GameList, {\n    gameList: gameList,\n    loadingGameList: loadingGameList,\n    select: select,\n    currentPage: currentPage,\n    totalPosts: totalPosts,\n    postsPerPage: postsPerPage,\n    setTotalPosts: setTotalPosts,\n    setCurrentPage: setCurrentPage,\n    setPostsPerPage: setPostsPerPage,\n    selectedLang: selectedLang,\n    selectedGame: selectedGame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default connect(({\n  gameList,\n  loading,\n  tag,\n  pagination,\n  footer,\n  navbar\n}) => ({\n  // <GameList>의 props\n  gameList: gameList.gameList,\n  loadingGameList: loading['gameList/GET_GAMELIST'],\n  select: tag.selectedTags,\n  currentPage: pagination.currentPage,\n  totalPosts: pagination.totalPosts,\n  postsPerPage: pagination.postsPerPage,\n  selectedLang: footer.selectedLang,\n  selectedGame: navbar.selectedGame\n}), {\n  // 리듀서 함수 (module/gameList.js)\n  getGameList,\n  setTotalPosts,\n  setCurrentPage,\n  setPostsPerPage\n})(GameListContainer);","map":{"version":3,"sources":["C:/Users/piani/Documents/GitHub/Toffy/frontend/src/containers/GameListContainer.js"],"names":["React","connect","GameList","getGameList","setCurrentPage","setPostsPerPage","setTotalPosts","useEffect","GameListContainer","loadingGameList","gameList","select","currentPage","totalPosts","postsPerPage","selectedLang","selectedGame","loading","tag","pagination","footer","navbar","selectedTags"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAAuC;;AACvC,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAAyCC,aAAzC,QAA8D,0BAA9D;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAgBP,KAAtB;;AACA,MAAMQ,iBAAiB,GAAG,CAAC;AACvBL,EAAAA,WADuB;AAEvBM,EAAAA,eAFuB;AAGvBC,EAAAA,QAHuB;AAIvBC,EAAAA,MAJuB;AAKvBC,EAAAA,WALuB;AAMvBC,EAAAA,UANuB;AAOvBC,EAAAA,YAPuB;AAQvBR,EAAAA,aARuB;AASvBF,EAAAA,cATuB;AAUvBC,EAAAA,eAVuB;AAWvBU,EAAAA,YAXuB;AAYvBC,EAAAA;AAZuB,CAAD,KAapB;AACFT,EAAAA,SAAS,CAAC,MAAM;AACZJ,IAAAA,WAAW,CAAC,CAAD,CAAX,CADY,CACI;AACnB,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT,CADE,CAGiB;;AACnB,sBACI,oBAAC,QAAD;AACI,IAAA,QAAQ,EAAEO,QADd;AAEI,IAAA,eAAe,EAAED,eAFrB;AAGI,IAAA,MAAM,EAAEE,MAHZ;AAII,IAAA,WAAW,EAAEC,WAJjB;AAKI,IAAA,UAAU,EAAEC,UALhB;AAMI,IAAA,YAAY,EAAEC,YANlB;AAOI,IAAA,aAAa,EAAER,aAPnB;AAQI,IAAA,cAAc,EAAEF,cARpB;AASI,IAAA,eAAe,EAAEC,eATrB;AAUI,IAAA,YAAY,EAAEU,YAVlB;AAWI,IAAA,YAAY,EAAEC,YAXlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAeH,CAhCD;;AAkCA,eAAef,OAAO,CAClB,CAAC;AAAES,EAAAA,QAAF;AAAYO,EAAAA,OAAZ;AAAqBC,EAAAA,GAArB;AAA0BC,EAAAA,UAA1B;AAAsCC,EAAAA,MAAtC;AAA8CC,EAAAA;AAA9C,CAAD,MAA6D;AACzD;AACAX,EAAAA,QAAQ,EAAEA,QAAQ,CAACA,QAFsC;AAGzDD,EAAAA,eAAe,EAAEQ,OAAO,CAAC,uBAAD,CAHiC;AAIzDN,EAAAA,MAAM,EAAEO,GAAG,CAACI,YAJ6C;AAKzDV,EAAAA,WAAW,EAACO,UAAU,CAACP,WALkC;AAMzDC,EAAAA,UAAU,EAAEM,UAAU,CAACN,UANkC;AAOzDC,EAAAA,YAAY,EAAEK,UAAU,CAACL,YAPgC;AAQzDC,EAAAA,YAAY,EAAEK,MAAM,CAACL,YARoC;AASzDC,EAAAA,YAAY,EAAGK,MAAM,CAACL;AATmC,CAA7D,CADkB,EAYlB;AACI;AACAb,EAAAA,WAFJ;AAGIG,EAAAA,aAHJ;AAIIF,EAAAA,cAJJ;AAKIC,EAAAA;AALJ,CAZkB,CAAP,CAmBbG,iBAnBa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'; // 리덕스와 직접 연동하는 컨테이너 컴포트를 리덕스와 연동하기 위한 connect 임포트\r\nimport GameList from '../components/GameList.js'\r\nimport { getGameList } from '../modules/gameList.js';\r\nimport { setCurrentPage, setPostsPerPage,setTotalPosts } from '../modules/pagination.js';\r\n\r\nconst { useEffect } = React;\r\nconst GameListContainer = ({ \r\n    getGameList,\r\n    loadingGameList,\r\n    gameList,\r\n    select,\r\n    currentPage,\r\n    totalPosts,\r\n    postsPerPage,\r\n    setTotalPosts,\r\n    setCurrentPage,\r\n    setPostsPerPage,\r\n    selectedLang,\r\n    selectedGame\r\n}) => {\r\n    useEffect(() => {\r\n        getGameList(1); // createRequestThunk에서 api에서 보내주는 객체의 성공 실패여부를 판단하고 dispatch로 리듀서 함수를 실행시켜 store 상태를 변화시킴\r\n    }, [getGameList]); // getGameList등 스토어 상태가 변화되면 useEffect 실행(렌더링)\r\n    return (\r\n        <GameList\r\n            gameList={gameList}\r\n            loadingGameList={loadingGameList}\r\n            select={select}\r\n            currentPage={currentPage}\r\n            totalPosts={totalPosts}\r\n            postsPerPage={postsPerPage}\r\n            setTotalPosts={setTotalPosts}\r\n            setCurrentPage={setCurrentPage}\r\n            setPostsPerPage={setPostsPerPage}\r\n            selectedLang={selectedLang}\r\n            selectedGame={selectedGame}\r\n        />\r\n    );\r\n};\r\n\r\nexport default connect(\r\n    ({ gameList, loading, tag, pagination, footer, navbar }) => ({\r\n        // <GameList>의 props\r\n        gameList: gameList.gameList,\r\n        loadingGameList: loading['gameList/GET_GAMELIST'],\r\n        select: tag.selectedTags,\r\n        currentPage:pagination.currentPage,\r\n        totalPosts: pagination.totalPosts,\r\n        postsPerPage: pagination.postsPerPage,\r\n        selectedLang: footer.selectedLang,\r\n        selectedGame : navbar.selectedGame\r\n    }),\r\n    {\r\n        // 리듀서 함수 (module/gameList.js)\r\n        getGameList,\r\n        setTotalPosts,\r\n        setCurrentPage,\r\n        setPostsPerPage\r\n    },\r\n)(GameListContainer)"]},"metadata":{},"sourceType":"module"}