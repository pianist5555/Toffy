{"ast":null,"code":"import { startLoading, finishLoading } from '../modules/loading.js';\nexport default function createRequestThunk(type, request) {\n  // 성공 및 실패 액션 타입 정의\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n  return params => async dispatch => {\n    dispatch({\n      type\n    }); // GET_POST or GET_USERS 타입의 리듀서 함수를 실행시키려는 것\n\n    dispatch(startLoading(type));\n\n    try {\n      const response = await request(params); // api에서 받아온 객체를 response에 담음\n\n      dispatch({\n        type: SUCCESS,\n        // 오류가 없다면 GET_POST_SUCCESS or GET_USERS_SUCCESS로 리턴하게 됨\n        payload: response.data\n      }); // payload(파라미터) 를 api 데이터로 넣어서 리턴함\n\n      dispatch(finishLoading(type));\n    } catch (e) {\n      dispatch({\n        type: FAILURE,\n        payload: e,\n        error: true\n      }); //에러 발생시\n\n      dispatch(startLoading(type));\n      throw e;\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/piani/Documents/GitHub/Toffy_frontend_R/Toffy/frontend/src/lib/createRequestThunk.js"],"names":["startLoading","finishLoading","createRequestThunk","type","request","SUCCESS","FAILURE","params","dispatch","response","payload","data","e","error"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,uBAA5C;AAEA,eAAe,SAASC,kBAAT,CAA4BC,IAA5B,EAAkCC,OAAlC,EAA2C;AACtD;AACA,QAAMC,OAAO,GAAI,GAAEF,IAAK,UAAxB;AACA,QAAMG,OAAO,GAAI,GAAEH,IAAK,UAAxB;AACA,SAAOI,MAAM,IAAI,MAAMC,QAAN,IAAkB;AAC/BA,IAAAA,QAAQ,CAAC;AAAEL,MAAAA;AAAF,KAAD,CAAR,CAD+B,CACX;;AACpBK,IAAAA,QAAQ,CAACR,YAAY,CAACG,IAAD,CAAb,CAAR;;AACA,QAAG;AACC,YAAMM,QAAQ,GAAG,MAAML,OAAO,CAACG,MAAD,CAA9B,CADD,CACyC;;AACxCC,MAAAA,QAAQ,CAAC;AACLL,QAAAA,IAAI,EAAGE,OADF;AACW;AAChBK,QAAAA,OAAO,EAAED,QAAQ,CAACE;AAFb,OAAD,CAAR,CAFD,CAKK;;AACJH,MAAAA,QAAQ,CAACP,aAAa,CAACE,IAAD,CAAd,CAAR;AACH,KAPD,CAOE,OAAOS,CAAP,EAAU;AACRJ,MAAAA,QAAQ,CAAC;AACLL,QAAAA,IAAI,EAAEG,OADD;AAELI,QAAAA,OAAO,EAAGE,CAFL;AAGLC,QAAAA,KAAK,EAAG;AAHH,OAAD,CAAR,CADQ,CAKJ;;AACJL,MAAAA,QAAQ,CAACR,YAAY,CAACG,IAAD,CAAb,CAAR;AACA,YAAMS,CAAN;AACH;AACJ,GAnBD;AAoBH","sourcesContent":["import { startLoading, finishLoading } from '../modules/loading.js';\r\n\r\nexport default function createRequestThunk(type, request) {\r\n    // 성공 및 실패 액션 타입 정의\r\n    const SUCCESS = `${type}_SUCCESS`;\r\n    const FAILURE = `${type}_FAILURE`;\r\n    return params => async dispatch => {\r\n        dispatch({ type }); // GET_POST or GET_USERS 타입의 리듀서 함수를 실행시키려는 것\r\n        dispatch(startLoading(type));\r\n        try{\r\n            const response = await request(params); // api에서 받아온 객체를 response에 담음\r\n            dispatch({\r\n                type : SUCCESS, // 오류가 없다면 GET_POST_SUCCESS or GET_USERS_SUCCESS로 리턴하게 됨\r\n                payload: response.data\r\n            }); // payload(파라미터) 를 api 데이터로 넣어서 리턴함\r\n            dispatch(finishLoading(type));\r\n        } catch (e) {\r\n            dispatch({\r\n                type: FAILURE,\r\n                payload : e,\r\n                error : true\r\n            }); //에러 발생시\r\n            dispatch(startLoading(type));\r\n            throw e;\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}