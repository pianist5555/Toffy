{"ast":null,"code":"import React from'react';import{connect}from'react-redux';// 리덕스와 직접 연동하는 컨테이너 컴포트를 리덕스와 연동하기 위한 connect 임포트\nimport GameList from'../components/GameList.js';import{getGameList}from'../modules/gameList.js';var useEffect=React.useEffect;var GameListContainer=function GameListContainer(_ref){var getGameList=_ref.getGameList,loadingGameList=_ref.loadingGameList,gameList=_ref.gameList,select=_ref.select;useEffect(function(){getGameList(1);// createRequestThunk에서 api에서 보내주는 객체의 성공 실패여부를 판단하고 dispatch로 리듀서 함수를 실행시켜 store 상태를 변화시킴\n},[getGameList]);// getGameList등 스토어 상태가 변화되면 useEffect 실행(렌더링)\nreturn/*#__PURE__*/React.createElement(GameList,{gameList:gameList,loadingGameList:loadingGameList,select:select});};export default connect(function(_ref2){var gameList=_ref2.gameList,loading=_ref2.loading,tag=_ref2.tag;return{// <GameList>의 props\ngameList:gameList.gameList,loadingGameList:loading['gameList/GET_GAMELIST'],select:tag.selectedTags};},{// 리듀서 함수 (module/gameList.js)\ngetGameList:getGameList})(GameListContainer);","map":{"version":3,"sources":["C:/Users/piani/Documents/GitHub/Toffyy/Toffyy/frontend/src/containers/GameListContainer.js"],"names":["React","connect","GameList","getGameList","useEffect","GameListContainer","loadingGameList","gameList","select","loading","tag","selectedTags"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAAuC;AACvC,MAAOC,CAAAA,QAAP,KAAqB,2BAArB,CACA,OAASC,WAAT,KAA4B,wBAA5B,C,GAEQC,CAAAA,S,CAAcJ,K,CAAdI,S,CACR,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,MAKpB,IAJFF,CAAAA,WAIE,MAJFA,WAIE,CAHFG,eAGE,MAHFA,eAGE,CAFFC,QAEE,MAFFA,QAEE,CADFC,MACE,MADFA,MACE,CACFJ,SAAS,CAAC,UAAM,CACZD,WAAW,CAAC,CAAD,CAAX,CAAgB;AACnB,CAFQ,CAEN,CAACA,WAAD,CAFM,CAAT,CAEmB;AACnB,mBACI,oBAAC,QAAD,EACI,QAAQ,CAAEI,QADd,CAEI,eAAe,CAAED,eAFrB,CAGI,MAAM,CAAEE,MAHZ,EADJ,CAOH,CAhBD,CAkBA,cAAeP,CAAAA,OAAO,CAClB,mBAAGM,CAAAA,QAAH,OAAGA,QAAH,CAAaE,OAAb,OAAaA,OAAb,CAAsBC,GAAtB,OAAsBA,GAAtB,OAAiC,CAC7B;AACAH,QAAQ,CAAEA,QAAQ,CAACA,QAFU,CAG7BD,eAAe,CAAEG,OAAO,CAAC,uBAAD,CAHK,CAI7BD,MAAM,CAAEE,GAAG,CAACC,YAJiB,CAAjC,EADkB,CAOlB,CACI;AACAR,WAAW,CAAXA,WAFJ,CAPkB,CAAP,CAWbE,iBAXa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'; // 리덕스와 직접 연동하는 컨테이너 컴포트를 리덕스와 연동하기 위한 connect 임포트\r\nimport GameList from '../components/GameList.js'\r\nimport { getGameList } from '../modules/gameList.js';\r\n\r\nconst { useEffect } = React;\r\nconst GameListContainer = ({ \r\n    getGameList,\r\n    loadingGameList,\r\n    gameList,\r\n    select,\r\n}) => {\r\n    useEffect(() => {\r\n        getGameList(1); // createRequestThunk에서 api에서 보내주는 객체의 성공 실패여부를 판단하고 dispatch로 리듀서 함수를 실행시켜 store 상태를 변화시킴\r\n    }, [getGameList]); // getGameList등 스토어 상태가 변화되면 useEffect 실행(렌더링)\r\n    return (\r\n        <GameList\r\n            gameList={gameList}\r\n            loadingGameList={loadingGameList}\r\n            select={select}\r\n        />\r\n    );\r\n};\r\n\r\nexport default connect(\r\n    ({ gameList, loading, tag }) => ({\r\n        // <GameList>의 props\r\n        gameList: gameList.gameList,\r\n        loadingGameList: loading['gameList/GET_GAMELIST'],\r\n        select: tag.selectedTags\r\n    }),\r\n    {\r\n        // 리듀서 함수 (module/gameList.js)\r\n        getGameList\r\n    },\r\n)(GameListContainer)"]},"metadata":{},"sourceType":"module"}