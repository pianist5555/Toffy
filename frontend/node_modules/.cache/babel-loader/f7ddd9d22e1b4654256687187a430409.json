{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\piani\\\\Documents\\\\GitHub\\\\Toffyy\\\\Toffyy\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";var _handleActions;import{createAction,handleActions}from\"redux-actions\";import produce from'immer';var SELECTTAGS=\"main/SELECTTAGS\";var UNSELECTTAGS=\"main/UNSELECTTAGS\";export var selectTags=createAction(SELECTTAGS);export var unselectTags=createAction(UNSELECTTAGS);var initialState={selectedTags:[]};var removeTag=function removeTag(arr,id){// return a new list with all values, except the matched id\n//state.selectedTags.filter(state => state.selectedTags.id !== action.payload)\nreturn arr.filter(function(arr){return arr!==id;});};var tag=handleActions((_handleActions={},_defineProperty(_handleActions,SELECTTAGS,function(state,action){return{selectedTags:state.selectedTags.concat(action.payload)};}),_defineProperty(_handleActions,UNSELECTTAGS,function(state,action){return{selectedTags:removeTag(state.selectedTags,action.payload)};}),_handleActions),initialState);export default tag;","map":{"version":3,"sources":["C:/Users/piani/Documents/GitHub/Toffyy/Toffyy/frontend/src/modules/tag.js"],"names":["createAction","handleActions","produce","SELECTTAGS","UNSELECTTAGS","selectTags","unselectTags","initialState","selectedTags","removeTag","arr","id","filter","tag","state","action","concat","payload"],"mappings":"8MAAA,OAASA,YAAT,CAAuBC,aAAvB,KAA4C,eAA5C,CACA,MAAOC,CAAAA,OAAP,KAAoB,OAApB,CAEA,GAAMC,CAAAA,UAAU,CAAG,iBAAnB,CACA,GAAMC,CAAAA,YAAY,CAAG,mBAArB,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAGL,YAAY,CAACG,UAAD,CAA/B,CACP,MAAO,IAAMG,CAAAA,YAAY,CAAGN,YAAY,CAACI,YAAD,CAAjC,CAEP,GAAMG,CAAAA,YAAY,CAAG,CACjBC,YAAY,CAAC,EADI,CAArB,CAIA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,GAAD,CAAMC,EAAN,CAAa,CAC7B;AACA;AACA,MAAOD,CAAAA,GAAG,CAACE,MAAJ,CAAW,SAAAF,GAAG,QAAIA,CAAAA,GAAG,GAAKC,EAAZ,EAAd,CAAP,CACD,CAJD,CAMA,GAAME,CAAAA,GAAG,CAAGZ,aAAa,mDAEpBE,UAFoB,CAEP,SAACW,KAAD,CAAQC,MAAR,QAAoB,CAACP,YAAY,CAAEM,KAAK,CAACN,YAAN,CAAmBQ,MAAnB,CAA0BD,MAAM,CAACE,OAAjC,CAAf,CAApB,EAFO,iCAGpBb,YAHoB,CAGL,SAACU,KAAD,CAAQC,MAAR,QAAoB,CAACP,YAAY,CAAEC,SAAS,CAACK,KAAK,CAACN,YAAP,CAAqBO,MAAM,CAACE,OAA5B,CAAxB,CAApB,EAHK,kBAKvBV,YALuB,CAAzB,CAQA,cAAeM,CAAAA,GAAf","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\r\nimport produce from 'immer';\r\n\r\nconst SELECTTAGS = \"main/SELECTTAGS\";\r\nconst UNSELECTTAGS = \"main/UNSELECTTAGS\";\r\n\r\nexport const selectTags = createAction(SELECTTAGS);\r\nexport const unselectTags = createAction(UNSELECTTAGS);\r\n\r\nconst initialState = {\r\n    selectedTags:[],\r\n};\r\n\r\nconst removeTag = (arr, id) => {\r\n  // return a new list with all values, except the matched id\r\n  //state.selectedTags.filter(state => state.selectedTags.id !== action.payload)\r\n  return arr.filter(arr => arr !== id);\r\n}\r\n\r\nconst tag = handleActions(\r\n  {\r\n    [SELECTTAGS]: (state, action) => ({selectedTags: state.selectedTags.concat(action.payload)}),\r\n    [UNSELECTTAGS]: (state, action) => ({selectedTags: removeTag(state.selectedTags, action.payload)}),\r\n  },                                                                     \r\n  initialState,\r\n);\r\n\r\nexport default tag;\r\n"]},"metadata":{},"sourceType":"module"}