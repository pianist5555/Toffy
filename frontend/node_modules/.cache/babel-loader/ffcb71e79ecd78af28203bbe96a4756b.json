{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piani\\\\Documents\\\\GitHub\\\\Toffy\\\\frontend\\\\src\\\\components\\\\Pagination.js\";\nimport React from \"react\";\n\nconst Pagination = ({\n  postsPerPage,\n  totalPosts,\n  currentPage,\n  setCurrentPage,\n  selectedGame\n}) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / 12); i++) {\n    pageNumbers.push(i);\n  } // 선택 효과\n\n\n  const prevClassName = document.getElementsByClassName(\"page-item\");\n  const afterClassName = document.getElementsByClassName(\"page-item active\");\n\n  const setClassNameToggle = number => {\n    if (afterClassName.length >= 1) {\n      for (let reset in prevClassName) {\n        if (afterClassName[Number(reset)]) {\n          afterClassName[Number(reset)].className = \"page-item\";\n        }\n      }\n    }\n\n    prevClassName[number - 1].classList.toggle(\"active\");\n  };\n\n  const branchRendering = (number, check) => {\n    if (!check) {\n      check = true;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: number,\n        className: \"page-item active\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          return setCurrentPage(number), setClassNameToggle(number);\n        },\n        className: \"page-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }, number));\n    } else {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: number,\n        className: \"page-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          return setCurrentPage(number), setClassNameToggle(number);\n        },\n        className: \"page-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      }, number));\n    }\n  };\n\n  const unnecessaryPage = () => {\n    return \"\";\n  };\n\n  const necessaryPage = () => {\n    if (totalPosts !== 200) {\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"paginationNav\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"pagination\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }\n      }, pageNumbers.map((number, check) => branchRendering(number, check))));\n    } else if (totalPosts === 200) {\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"paginationNav first\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"pagination\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }, pageNumbers.map((number, check) => branchRendering(number, check))));\n    }\n  };\n\n  if (pageNumbers[1] && selectedGame.gameName === \"all\") {\n    return necessaryPage();\n  } else {\n    return unnecessaryPage();\n  }\n};\n\nexport default Pagination;","map":{"version":3,"sources":["C:/Users/piani/Documents/GitHub/Toffy/frontend/src/components/Pagination.js"],"names":["React","Pagination","postsPerPage","totalPosts","currentPage","setCurrentPage","selectedGame","pageNumbers","i","Math","ceil","push","prevClassName","document","getElementsByClassName","afterClassName","setClassNameToggle","number","length","reset","Number","className","classList","toggle","branchRendering","check","unnecessaryPage","necessaryPage","map","gameName"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nconst Pagination = ({postsPerPage, totalPosts, currentPage, setCurrentPage, selectedGame}) => {\r\n      const pageNumbers = [];\r\n      for (let i = 1; i <= Math.ceil(totalPosts / 12); i++) {\r\n        pageNumbers.push(i);\r\n      }\r\n      \r\n      // 선택 효과\r\n      const prevClassName = document.getElementsByClassName(\"page-item\")\r\n      const afterClassName = document.getElementsByClassName(\"page-item active\")\r\n      const setClassNameToggle = (number) => {\r\n        if (afterClassName.length >=1){\r\n          for(let reset in prevClassName){\r\n            if(afterClassName[Number(reset)]){\r\n              afterClassName[Number(reset)].className=\"page-item\";\r\n            }\r\n          }\r\n        }\r\n        prevClassName[number-1].classList.toggle (\"active\");\r\n      }\r\n      \r\n      const branchRendering = (number,check) => {\r\n        if(!check){\r\n          check=true;\r\n          return(\r\n            <li key={number} className='page-item active'>\r\n              <button onClick={() => {return(setCurrentPage(number),setClassNameToggle(number))}} className='page-link'>\r\n                {number}\r\n              </button>\r\n            </li>\r\n          )\r\n        } else {\r\n          return(\r\n            <li key={number} className='page-item'>\r\n              <button onClick={() => {return(setCurrentPage(number),setClassNameToggle(number))}} className='page-link'>\r\n                {number}\r\n              </button>\r\n            </li>\r\n          )\r\n        }\r\n      }\r\n      const unnecessaryPage = () => {\r\n        return \"\"\r\n      }\r\n      const necessaryPage = () => {\r\n        if(totalPosts!==200){\r\n          return(\r\n            <nav className=\"paginationNav\">\r\n              <ul className='pagination'>\r\n                {pageNumbers.map((number,check) => (\r\n                  branchRendering(number,check)\r\n                ))}\r\n              </ul>\r\n            </nav>\r\n          )\r\n        } else if(totalPosts===200) {\r\n          return(\r\n          <nav className=\"paginationNav first\">\r\n              <ul className='pagination'>\r\n                {pageNumbers.map((number,check) => (\r\n                  branchRendering(number,check)\r\n                ))}\r\n              </ul>\r\n            </nav>\r\n          )\r\n        }\r\n      }\r\n\r\n      if(pageNumbers[1]&&selectedGame.gameName===\"all\") {\r\n        return necessaryPage()\r\n      } else {\r\n        return unnecessaryPage()\r\n      }\r\n  }\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}