{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piani\\\\Documents\\\\GitHub\\\\Toffyy\\\\Toffyy\\\\frontend\\\\src\\\\pages\\\\MyPage.js\";\nimport React, { Component, useState, Fragment } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../components/Navbar\";\nimport \"../css/bootstrap4-neon-glow.css\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nclass MyPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value1: \"\",\n      value2: \"\",\n      textList: []\n    };\n\n    this._renderText = () => {\n      axios // Restframework에서 json으로 보여주는 페이지 url을 get 방식으로 접근\n      .get(\"/api/tfnote/\").then(res => this.setState({\n        textList: res.data\n      })).catch(err => console.log(err));\n    };\n\n    this._handleWriter = e => {\n      e.preventDefault();\n      this.setState({\n        value1: e.target.value\n      });\n    };\n\n    this._handleText = e => {\n      e.preventDefault();\n      this.setState({\n        value2: e.target.value\n      });\n    };\n\n    this._handleSubmit = () => {\n      const value1 = this.state.value1;\n      const value2 = this.state.value2;\n      let input1, input2;\n      [input1, input2] = [document.getElementById(\"_writer\"), document.getElementById(\"_text\")];\n      input1.value = \"\";\n      input2.value = \"\";\n      axios.post(\"/api/tfnote/\", {\n        writer: value1,\n        text: value2\n      }).then(res => this._renderText());\n    };\n  }\n\n  componentDidMount() {\n    this._renderText();\n  } // 텍스트 렌더링\n\n\n  render() {\n    const {\n      textList\n    } = this.state;\n\n    let _memo;\n\n    let realMemo;\n\n    const _undefined = arg => {\n      return arg.replace(\"undefined\", \"\");\n    };\n\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ContactBack\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ContactBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"submitForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ht-tm-codeblock ht-tm-btn-replaceable ht-tm-element ht-tm-element-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Contact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, textList.map((text, index) => {\n      const realDate = text.date.split('T');\n      const realTime = realDate[1].split(\"+\");\n      const realTimer = realTime[0].split(\".\");\n      _memo += \"[ \" + text.writer + \" ] : \" + text.text + \" \" + realDate[0] + \" \" + realTimer[0] + \"\\n\";\n      realMemo = _undefined(_memo);\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blackBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      value: realMemo,\n      type: \"text\",\n      className: \"form-control text chating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"submitLogo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"writer\",\n      className: \"form-control writer\",\n      value: this.state.value,\n      onChange: this._handleWriter,\n      id: \"_writer\",\n      \"aria-describedby\": \"_writer\",\n      placeholder: \"Stranger\",\n      maxlength: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      className: \"form-control text\",\n      value: this.state.value,\n      onChange: this._handleText,\n      id: \"_text\",\n      \"aria-describedby\": \"_text\",\n      placeholder: \"Want to talk?\",\n      maxlength: \"200\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"_apiJoinclassName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this._handleSubmit,\n      class: \"ht-tm-element btn btn-outline-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, \"SEND\")))))))));\n  }\n\n}\n\nexport default MyPage;","map":{"version":3,"sources":["C:/Users/piani/Documents/GitHub/Toffyy/Toffyy/frontend/src/pages/MyPage.js"],"names":["React","Component","useState","Fragment","axios","Navbar","defaults","xsrfCookieName","xsrfHeaderName","MyPage","state","value1","value2","textList","_renderText","get","then","res","setState","data","catch","err","console","log","_handleWriter","e","preventDefault","target","value","_handleText","_handleSubmit","input1","input2","document","getElementById","post","writer","text","componentDidMount","render","_memo","realMemo","_undefined","arg","replace","map","index","realDate","date","split","realTime","realTimer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAO,iCAAP;AAEAD,KAAK,CAACE,QAAN,CAAeC,cAAf,GAAgC,WAAhC;AACAH,KAAK,CAACE,QAAN,CAAeE,cAAf,GAAgC,aAAhC;;AAEA,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BS,KAD6B,GACrB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KADqB;;AAAA,SAW7BC,WAX6B,GAWf,MAAM;AAClBV,MAAAA,KAAK,CACH;AADG,OAEFW,GAFH,CAEO,cAFP,EAGGC,IAHH,CAGQC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAEL,QAAAA,QAAQ,EAAEI,GAAG,CAACE;AAAhB,OAAd,CAHf,EAIGC,KAJH,CAISC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJhB;AAKD,KAjB4B;;AAAA,SAoB7BG,aApB6B,GAoBbC,CAAC,IAAI;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKR,QAAL,CAAc;AACZP,QAAAA,MAAM,EAAEc,CAAC,CAACE,MAAF,CAASC;AADL,OAAd;AAGD,KAzB4B;;AAAA,SA4B7BC,WA5B6B,GA4BfJ,CAAC,IAAI;AACjBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKR,QAAL,CAAc;AACZN,QAAAA,MAAM,EAAEa,CAAC,CAACE,MAAF,CAASC;AADL,OAAd;AAGD,KAjC4B;;AAAA,SAoC7BE,aApC6B,GAoCb,MAAM;AACpB,YAAOnB,MAAM,GAAI,KAAKD,KAAL,CAAWC,MAA5B;AACA,YAAOC,MAAM,GAAI,KAAKF,KAAL,CAAWE,MAA5B;AACA,UAAImB,MAAJ,EAAYC,MAAZ;AACA,OAACD,MAAD,EAASC,MAAT,IAAmB,CAACC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAD,EAAoCD,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAApC,CAAnB;AACAH,MAAAA,MAAM,CAACH,KAAP,GAAe,EAAf;AACAI,MAAAA,MAAM,CAACJ,KAAP,GAAe,EAAf;AACAxB,MAAAA,KAAK,CACF+B,IADH,CACQ,cADR,EACwB;AAAEC,QAAAA,MAAM,EAAEzB,MAAV;AAAkB0B,QAAAA,IAAI,EAAEzB;AAAxB,OADxB,EAEGI,IAFH,CAEQC,GAAG,IAAI,KAAKH,WAAL,EAFf;AAGD,KA9C4B;AAAA;;AAM7BwB,EAAAA,iBAAiB,GAAG;AAClB,SAAKxB,WAAL;AACD,GAR4B,CAU7B;;;AAsCAyB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE1B,MAAAA;AAAF,QAAe,KAAKH,KAA1B;;AACA,QAAI8B,KAAJ;;AACA,QAAIC,QAAJ;;AACA,UAAMC,UAAU,GAAIC,GAAD,IAAS;AAC1B,aAAOA,GAAG,CAACC,OAAJ,CAAY,WAAZ,EAAwB,EAAxB,CAAP;AACD,KAFD;;AAGA,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,yEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG/B,QAAQ,CAACgC,GAAT,CAAa,CAACR,IAAD,EAAOS,KAAP,KAAiB;AAC7B,YAAMC,QAAQ,GAACV,IAAI,CAACW,IAAL,CAAUC,KAAV,CAAgB,GAAhB,CAAf;AACA,YAAMC,QAAQ,GAACH,QAAQ,CAAC,CAAD,CAAR,CAAYE,KAAZ,CAAkB,GAAlB,CAAf;AACA,YAAME,SAAS,GAACD,QAAQ,CAAC,CAAD,CAAR,CAAYD,KAAZ,CAAkB,GAAlB,CAAhB;AACAT,MAAAA,KAAK,IAAK,OAAKH,IAAI,CAACD,MAAV,GAAiB,OAAjB,GAAyBC,IAAI,CAACA,IAA9B,GAAmC,GAAnC,GAAuCU,QAAQ,CAAC,CAAD,CAA/C,GAAmD,GAAnD,GAAuDI,SAAS,CAAC,CAAD,CAAhE,GAAoE,IAA9E;AACAV,MAAAA,QAAQ,GAAGC,UAAU,CAACF,KAAD,CAArB;AACD,KANA,CADH,eAQE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAU,MAAA,KAAK,EAAEC,QAAjB;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,2BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CARF,CADA,CAJF,eAsBE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,eAwBE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,qBAFZ;AAGE,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWkB,KAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKJ,aAJjB;AAKE,MAAA,EAAE,EAAC,SALL;AAME,0BAAiB,SANnB;AAOE,MAAA,WAAW,EAAC,UAPd;AAQE,MAAA,SAAS,EAAC,IARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAWE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,mBAFZ;AAGE,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWkB,KAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKC,WAJjB;AAKE,MAAA,EAAE,EAAC,OALL;AAME,0BAAiB,OANnB;AAOE,MAAA,WAAW,EAAC,eAPd;AAQE,MAAA,SAAS,EAAC,KARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,eAqBE;AAAK,MAAA,EAAE,EAAC,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACF;AAAQ,MAAA,OAAO,EAAE,KAAKC,aAAtB;AAAqC,MAAA,KAAK,EAAC,qCAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADE,CArBF,CAxBF,CADF,CADF,CADF,CADA,CAFA,CADF;AAiED;;AAxH4B;;AA4H/B,eAAerB,MAAf","sourcesContent":["import React, { Component, useState, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nimport \"../css/bootstrap4-neon-glow.css\";\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\n\r\nclass MyPage extends Component {\r\n  state = {\r\n    value1: \"\",\r\n    value2: \"\",\r\n    textList: []\r\n  };\r\n  componentDidMount() {\r\n    this._renderText();\r\n  }\r\n  \r\n  // 텍스트 렌더링\r\n  _renderText = () => {\r\n    axios\r\n      // Restframework에서 json으로 보여주는 페이지 url을 get 방식으로 접근\r\n      .get(\"/api/tfnote/\")\r\n      .then(res => this.setState({ textList: res.data }))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  // writer\r\n  _handleWriter = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      value1: e.target.value\r\n    });\r\n  };\r\n\r\n  //text\r\n  _handleText = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      value2: e.target.value\r\n    });\r\n  };\r\n\r\n  //서버로 Data 전송\r\n  _handleSubmit = () => {\r\n    const  value1  = this.state.value1;\r\n    const  value2  = this.state.value2;\r\n    let input1, input2\r\n    [input1, input2] = [document.getElementById(\"_writer\"),document.getElementById(\"_text\")]\r\n    input1.value = \"\";\r\n    input2.value = \"\";\r\n    axios\r\n      .post(\"/api/tfnote/\", { writer: value1, text: value2 })\r\n      .then(res => this._renderText());\r\n  };\r\n\r\n  render() {\r\n    const { textList } = this.state;\r\n    let _memo\r\n    let realMemo\r\n    const _undefined = (arg) => {\r\n      return arg.replace(\"undefined\",\"\")\r\n    }\r\n    return (\r\n      <Fragment>\r\n      <Navbar></Navbar>\r\n      <div className=\"ContactBack\">\r\n      <div className=\"ContactBody\">\r\n        <div className=\"card-body\">\r\n          <div className=\"submitForm\">\r\n            <div className=\"ht-tm-codeblock ht-tm-btn-replaceable ht-tm-element ht-tm-element-inner\">\r\n              <div>\r\n                {}\r\n              </div>\r\n              <div>\r\n              <div className=\"Contact\">\r\n                {textList.map((text, index) => {\r\n                  const realDate=text.date.split('T')\r\n                  const realTime=realDate[1].split(\"+\")\r\n                  const realTimer=realTime[0].split(\".\")\r\n                  _memo += (\"[ \"+text.writer+\" ] : \"+text.text+\" \"+realDate[0]+\" \"+realTimer[0]+\"\\n\")\r\n                  realMemo = _undefined(_memo)\r\n                })}\r\n                <div className=\"blackBox\">\r\n                <textarea value={realMemo}\r\n                  type=\"text\"\r\n                  className=\"form-control text chating\"\r\n                 >\r\n                </textarea>\r\n                </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"submitLogo\">\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"writer\"\r\n                  className=\"form-control writer\"\r\n                  value={this.state.value}\r\n                  onChange={this._handleWriter}\r\n                  id=\"_writer\"\r\n                  aria-describedby=\"_writer\"\r\n                  placeholder=\"Stranger\"\r\n                  maxlength=\"20\"\r\n                ></input>\r\n                <textarea\r\n                  type=\"text\"\r\n                  className=\"form-control text\"\r\n                  value={this.state.value}\r\n                  onChange={this._handleText}\r\n                  id=\"_text\"\r\n                  aria-describedby=\"_text\"\r\n                  placeholder=\"Want to talk?\"\r\n                  maxlength=\"200\"\r\n                ></textarea>\r\n                <div id=\"_apiJoinclassName\">\r\n              <button onClick={this._handleSubmit} class=\"ht-tm-element btn btn-outline-light\">\r\n                SEND\r\n              </button>\r\n            </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>  \r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default MyPage;"]},"metadata":{},"sourceType":"module"}